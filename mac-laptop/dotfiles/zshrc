export DOCKER_DEFAULT_PLATFORM=linux/amd64
export EDITOR=vim
export LESSHISTFILE=/dev/null
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$HOME/.local/bin:$HOME/.pyenv/bin:$PATH"

alias cat='bat' k='kubectl'
alias ga='git add' gc='git commit -v' gl='git pull' gp='git push' gg='git gui' gst='git status' gco='git checkout' \
    gd='git diff' gds='git diff --staged' gcf='confirm_and_do "git clean -f"' grh='confirm_and_do "git reset --hard"' \
    grs='git restore --staged' gr='git restore'
alias tf='terraform' tfi='tf init' tfp='tf plan' tfa='tf apply'
alias ls='exa' sl='ls' l='exa -lbF --git' ll='exa -la --git' tree='exa --tree --git' ltree='tree -l'    
alias c='confirm_and_do "rm /tmp/clipboard/*"'
alias sk='source ~/.key'
alias dam='aws sts decode-authorization-message --encoded-message "$(pbpaste)" | jq ".DecodedMessage" -r | jq'

. /opt/homebrew/Cellar/autojump/22.5.3_3/share/autojump/autojump.zsh
. pack djui/alias-tips alias-tips.plugin.zsh:alias-tips.py
. pack ohmyzsh/ohmyzsh lib/history.zsh
. pack ohmyzsh/ohmyzsh plugins/dirhistory/dirhistory.plugin.zsh
# fzf key-bindings should be after omz
. pack ohmyzsh/ohmyzsh lib/key-bindings.zsh
. pack junegunn/fzf shell/key-bindings.zsh

setopt autopushd
setopt extended_glob
setopt interactive_comments
setopt share_history

autoload -Uz compinit; compinit -C  # to apply new completion, run `compinit`
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes
zstyle ':completion:*:*:git:*' script /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.zsh
source <(helm completion zsh)

setup_env() {
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
    eval "$(direnv hook zsh)"
}
t() { export PURE_PROMPT_SYMBOL="$1 ❯"; }
tmp() { TMP=~/tmp/$(date +%F); mkdir -p $TMP; cd $TMP }
y() { [[ $# = 0 ]] && pbcopy || { mkdir -p /tmp/clipboard; cat > /tmp/clipboard/$1 } }
p() { [[ $# = 0 ]] && pbpaste || { [[ $1 == '.' ]] && ls /tmp/clipboard || cat /tmp/clipboard/$1 } }
i() {
    python3 -m IPython -i -c "
        import json, pathlib
        a = type('',(object,),{})()
        for _ in pathlib.Path('/tmp/clipboard/').glob('*'):
            text = _.read_text()
            try:
                text = json.loads(text)
            except json.JSONDecodeError:
                pass
            setattr(a, _.name, text)
    "
}

fpath+=(/opt/homebrew/share/zsh/site-functions)
autoload -U promptinit; promptinit
prompt pure
